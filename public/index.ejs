<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App New</title>
    <script src="https://cdn.jsdelivr.net/npm/ol@v8.2.0/dist/ol.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/ol@v8.2.0/ol.css">
</head>
<body class="bg-black">
    <header class="bg-amber-900 p-4">
        <div class="flex items-center justify-between flex-wrap">
            <a class="flex items-center text-white mr-6 ml-40 font-bold text-xl" href="/">
                Weather App Assignment 3
            </a>
            <div class="text-sm text-white mr-40">
                    <a href="/" class="inline-block  mr-4 hover:bg-amber-600 hover:rounded">
                        Home
                    </a>
                    <a href="/signup" class="inline-block mr-4 hover:bg-amber-600 hover:rounded" <% if (isAuthenticated) { %>style="display: none;"<% } %>>
                        Signup
                    </a>
                    <a href="/login" class="inline-block hover:bg-amber-600 hover:rounded" <% if (isAuthenticated) { %>style="display: none;"<% } %>>
                        Login
                    </a>
                    <a href="/logout" class="inline-block mr-4 hover:bg-amber-600 hover:rounded" <% if (!isAuthenticated) { %>style="display: none;"<% } %>>
                        Logout
                    </a>
                    <a href="/history" class="inline-block hover:bg-amber-600 hover:rounded" <% if (!isAuthenticated) { %>style="display: none;"<% } %>>
                        History
                    </a>
                    <select name="select" class="text-black ml-4 ">
                        <option value="en">English</option>
                        <option value="ru">Russian</option>
                        <option value="kz">Kazakh</option>
                    </select>
                    <div id="exchange-rate"></div>
            </div>
            
        </div>
    </header>
     <div class="flex justify-center mt-10">
        <div class="flex justify-center bg-amber-600 h-[425px] w-[650px] items-center rounded-xl">
     <div id="map" class="h-[400px] w-[600px]"></div>
    </div>

    </div>
                <div class="text-white justify-center flex" id="current-date-time"></div>

    <div class="h-80 flex justify-between mx-80 items-center">
        <div class="flex flex-col">
            <input type="text" id="city-select" class="mb-4 p-2 bg-gray-400 rounded border" placeholder="Enter your city name">
            <button class="py-2 px-4 bg-amber-600 hover:bg-amber-700 rounded shadow-lg cursor-pointer text-lg" onclick="weatherCity()">Click</button>
        </div>
        
        <div class="text-white flex">
            <div>
            <section class="bg-amber-600 py-2 px-4 m-4">
                 <p class="font-bold">Pressure:</p>
                <p id="weather-pressure">*empty*</p>
            </section>
            <section class="bg-amber-600 py-2 px-4 m-4">
                <p class="font-bold">Temperature:</p>
                <p id="weather-temp">*empty*</p>
            </section>
            <section class="bg-amber-600 py-2 px-4 m-4">
                <p class="font-bold">Feels like:</p>
                <p id="weather-feels">*empty*</p>
            </section>
            </div>
            
            <div>
        <section class="bg-amber-600 py-2 px-4 m-4">
                <p class="font-bold">Wind speed:</p>
                <p id="weather-wspeed">*empty*</p>
            </section>
            <section class="bg-amber-600 py-2 px-4 m-4">
                <p class="font-bold">Country code:</p>
                <p id="weather-code">*empty*</p>
            </section>
            <section class="bg-amber-600 py-2 px-4 m-4">
                <p class="font-bold">Humidity:</p>
                <p id="weather-humidity">*empty*</p>
            </section>
    </div>
    </div>
    
    </div>
   
    </div>
        
    <footer class="flex justify-end mx-20"><h1 class="bg-amber-700 px-4 py-2 rounded-xl mb-5">Vadim Valov SE-2203</h1></footer>
</script>
<script>

const map = new ol.Map({
    target: 'map',
    layers: [
        new ol.layer.Tile({
        source: new ol.source.OSM(),
        }),
    ],
    view: new ol.View({
        center: [0, 0],
        zoom: 2,
    }),
});

function weatherCity(){
    const cityInput = document.getElementById("city-select");
    if(typeof cityInput === "undefined" || !cityInput.value){
        alert("Invalid city name provided");
        return;
    }

    const cityName = cityInput.value;
    fetch(`/weather/${cityName}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            setCenter(data.coord.lat, data.coord.lon);
            document.getElementById("weather-pressure").innerHTML = data.main.pressure;
            document.getElementById("weather-temp").innerHTML = data.main.temp + "C";
            document.getElementById("weather-feels").innerHTML = data.main.feels_like;
            document.getElementById("weather-humidity").innerHTML = data.main.humidity;
            document.getElementById("weather-wspeed").innerHTML = data.wind.speed + "m/s";
            document.getElementById("weather-code").innerHTML = data.sys.country;
        })
        .catch(error => {
            console.error('There has been a problem with your fetch operation:', error);
            alert('Failed to fetch weather data');
        });
        const API_KEY = "HB8TPIARVGRK";
    fetch(`http://api.timezonedb.com/v2.1/get-time-zone?key=${API_KEY}&format=json&by=zone&zone=Europe/London`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(dateTimeData => {
            const currentDateTime = new Date(dateTimeData.formatted);
            document.getElementById("current-date-time").innerText = `Current Date and Time: ${currentDateTime.toLocaleString()}`;
        })
        .catch(error => {
            console.error('There has been a problem with fetching current date and time:', error);
            alert('Failed to fetch current date and time');
        });

}

function setCenter(latitude, longitude, zoom = 9) {
        var view = map.getView();
        var olCenter = ol.proj.fromLonLat([longitude, latitude]);
        view.setCenter(olCenter);
        view.setZoom(zoom);
}

async function loadExchangeRate() {
    try {
        const apiKey = "ca4ddc1c144c416ba416f7401a5acbbe";
        const response = await fetch(`https://open.er-api.com/v6/latest/USD?app_id=${apiKey}`);
        const data = await response.json();
        const exchangeRate = data.rates.KZT;

        const exchangeRateElement = document.getElementById("exchange-rate");
        exchangeRateElement.innerText = `1 USD =  ${exchangeRate.toFixed(2)} KZT`;
    } catch (error) {
        console.error("Failed to load exchange rate:", error);
    }
}

window.onload = loadExchangeRate;

</script>
</body>
</html>
